a:9:{i:0;a:6:{s:4:"type";i:16384;s:7:"message";s:264:"Method "Symfony\Component\Form\AbstractType::buildForm()" might add "void" as a native return type declaration in the future. Do the same in child class "App\Form\DistributeurType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:76:"C:\wamp64\www\monAppliSymf\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:84:"C:\wamp64\www\monAppliSymf\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:1;a:6:{s:4:"type";i:16384;s:7:"message";s:271:"Method "Symfony\Component\Form\AbstractType::configureOptions()" might add "void" as a native return type declaration in the future. Do the same in child class "App\Form\DistributeurType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:76:"C:\wamp64\www\monAppliSymf\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:84:"C:\wamp64\www\monAppliSymf\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:2;a:6:{s:4:"type";i:16384;s:7:"message";s:261:"Method "Symfony\Component\Form\AbstractType::buildForm()" might add "void" as a native return type declaration in the future. Do the same in child class "App\Form\ReferenceType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:76:"C:\wamp64\www\monAppliSymf\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:84:"C:\wamp64\www\monAppliSymf\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:3;a:6:{s:4:"type";i:16384;s:7:"message";s:268:"Method "Symfony\Component\Form\AbstractType::configureOptions()" might add "void" as a native return type declaration in the future. Do the same in child class "App\Form\ReferenceType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:76:"C:\wamp64\www\monAppliSymf\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:84:"C:\wamp64\www\monAppliSymf\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:4;a:6:{s:4:"type";i:16384;s:7:"message";s:274:"Method "Symfony\Component\Form\AbstractType::configureOptions()" might add "void" as a native return type declaration in the future. Do the same in child class "App\Form\Type\MyCheckboxType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:76:"C:\wamp64\www\monAppliSymf\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:84:"C:\wamp64\www\monAppliSymf\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:5;a:6:{s:4:"type";i:16384;s:7:"message";s:270:"Method "Symfony\Component\Form\AbstractType::getParent()" might add "?string" as a native return type declaration in the future. Do the same in child class "App\Form\Type\MyCheckboxType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:76:"C:\wamp64\www\monAppliSymf\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:84:"C:\wamp64\www\monAppliSymf\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:6;a:6:{s:4:"type";i:16384;s:7:"message";s:268:"Method "Symfony\Component\Validator\Constraint::validatedBy()" might add "string" as a native return type declaration in the future. Do the same in child class "App\Validator\Antispam" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:76:"C:\wamp64\www\monAppliSymf\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:84:"C:\wamp64\www\monAppliSymf\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:7;a:6:{s:4:"type";i:16384;s:7:"message";s:293:"Method "Symfony\Component\Validator\ConstraintValidatorInterface::validate()" might add "void" as a native return type declaration in the future. Do the same in implementation "App\Validator\AntispamValidator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:76:"C:\wamp64\www\monAppliSymf\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:84:"C:\wamp64\www\monAppliSymf\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:8;a:6:{s:4:"type";i:16384;s:7:"message";s:177:"The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger".";s:4:"file";s:76:"C:\wamp64\www\monAppliSymf\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:84:"C:\wamp64\www\monAppliSymf\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}}